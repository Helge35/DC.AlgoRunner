// <auto-generated />
using System;
using AlgoRunner.Api.Dal.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlgoRunner.Api.Migrations
{
    [DbContext(typeof(AlgoRunnerDbContext))]
    [Migration("20190317123058_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("ServerPath");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.AlgResultType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AlgResultTypes");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.AlgoExecutionParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExecutionInfoId");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Value")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("ExecutionInfoId");

                    b.ToTable("AlgoExecutionParams");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.AlgoParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlgorithmId");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("RangeJSON")
                        .HasColumnName("Range");

                    b.Property<string>("TypeJSON")
                        .HasColumnName("Type");

                    b.Property<string>("Value")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("AlgorithmId");

                    b.ToTable("AlgoParams");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.Algorithm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Desc");

                    b.Property<string>("FileServerPath")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<int>("ResultTypeId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ResultTypeId");

                    b.ToTable("Algorithms");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.ExecutionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlgoId");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("ExecutedBy")
                        .HasMaxLength(250);

                    b.Property<string>("FileExePath")
                        .HasMaxLength(1000);

                    b.Property<int?>("ProjectId1");

                    b.Property<DateTime?>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("AlgoId");

                    b.HasIndex("ProjectId1");

                    b.ToTable("ExecutionInfos");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Context");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Title");

                    b.Property<string>("UserName");

                    b.Property<bool>("isReaded");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("Desc");

                    b.Property<DateTime>("LastExecutionDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.ProjectAlgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlgoId");

                    b.Property<int?>("ProjectId1");

                    b.HasKey("Id");

                    b.HasIndex("AlgoId");

                    b.HasIndex("ProjectId1");

                    b.ToTable("ProjectAlgos");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.UserFavoriteProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectId");

                    b.Property<int?>("UserId1");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId1");

                    b.ToTable("UserFavoriteProjects");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.AlgoExecutionParam", b =>
                {
                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.ExecutionInfo")
                        .WithMany("ExeParams")
                        .HasForeignKey("ExecutionInfoId");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.AlgoParam", b =>
                {
                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Algorithm")
                        .WithMany("AlgoParams")
                        .HasForeignKey("AlgorithmId");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.Algorithm", b =>
                {
                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.AlgResultType", "ResultType")
                        .WithMany()
                        .HasForeignKey("ResultTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.ExecutionInfo", b =>
                {
                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Algorithm", "Algorithm")
                        .WithMany()
                        .HasForeignKey("AlgoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Project", "Project")
                        .WithMany("ExecutionsList")
                        .HasForeignKey("ProjectId1");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.Project", b =>
                {
                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.ProjectAlgo", b =>
                {
                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Algorithm", "Algorithm")
                        .WithMany()
                        .HasForeignKey("AlgoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Project", "Project")
                        .WithMany("ProjectAlgoList")
                        .HasForeignKey("ProjectId1");
                });

            modelBuilder.Entity("AlgoRunner.Api.Dal.EF.Entities.UserFavoriteProject", b =>
                {
                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlgoRunner.Api.Dal.EF.Entities.User", "User")
                        .WithMany("UserFavoriteProjectList")
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
